---
applications:
  - name: cf-demo-oauth2-login
    memory: 1G
    instances: 1
    path: target/cf-demo-oauth2-login-0.0.1-SNAPSHOT.jar
    services:
      - mission-reporting-dev-branch-sso # Make sure you have created an sso service instance with this name. Your app will be bound to this service instance you list here when it is pushed.
    env:
      # disable the java buildpackâ€™s auto-reconfiguration so that you always delegate to Boot to create beans.
      JBP_CONFIG_SPRING_AUTO_RECONFIGURATION: '{enabled: false}'

      # Since the auto-reconfiguration also set the cloud profile, you will have to do that explicitly
      SPRING_PROFILES_ACTIVE: cloud

      # *** BEGIN: env vars for the application ***

      # The grant type used in the /authorize call by Spring Security 5
      # This variable is not needed when using both:
      #   - App SSO 1.10 or newer
      #   - java-cfenv 1.1.1 or newer
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_SSO_AUTHORIZATIONGRANTTYPE: authorization_code

      # The scopes requested when obtaining a token by Spring Security 5
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_SSO_SCOPE: openid, profile, roles, user_attributes, logs.read, logs.create

      # This can be used in conjunction with the cloudfoundry-certificate-truster library to skip all cert checks for
      # development environments which use self-signed certs.
      # DO NOT USE THIS IN PRODUCTION!!!
      # TRUST_CERTS: login.sfo.identity.team

      # *** END: env vars for the application ***

      # Grant type to be set for the application's UAA client configurations.
      GRANT_TYPE: authorization_code

      # Identity provider(s) to be set for the application's client configurations. This value represents the allowed identity providers for the app through the SSO service plan.
      SSO_IDENTITY_PROVIDERS: uaa

      # The following are bootstrap configurations you may use to automatically create client configurations in the SSO service for your application if the configurations do not exist. These configurations take effect when binding or rebinding to the SSO, and will overwrite existing client configurations if any. The values provided below are examples.

      # Whitelist of redirect URI(s) allowed for the application. This value must start with http:// or https://
      # SSO_REDIRECT_URIS: https://my-domain-here.domain.org

      # Client scope(s) for the application, not used for client credentials grant type
      SSO_SCOPES: openid, profile, roles, user_attributes, logs.read, logs.create

      SSO_RESOURCES: |
        logs.read:  Read app logs
        logs.create: Create app logs

